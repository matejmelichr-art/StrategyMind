<!doctype html>
<html lang="cs">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>StrategyMind — Market Analyzer (demo)</title>
  <link rel="preconnect" href="https://cdn.tailwindcss.com">
  <script src="https://cdn.tailwindcss.com"></script>
  <script>tailwind.config={theme:{extend:{colors:{brand:"#0A2342",mint:"#2bd4a9"}}}}</script>
  <style>
    .pill{border:1px solid #e5e7eb;border-radius:999px;padding:.2rem .5rem;background:#fff;font-size:.75rem}
    canvas{display:block;width:100%;height:120px}
  </style>
</head>
<body class="bg-slate-50 text-slate-900">
<header class="sticky top-0 z-50 bg-white/80 backdrop-blur border-b">
  <div class="mx-auto max-w-7xl px-4 py-3 flex items-center justify-between">
    <a class="font-semibold" href="/client/">← Klientské centrum</a>
    <nav class="flex gap-2">
      <a class="px-3 py-2 rounded-lg border bg-slate-100" href="/client/market/">Market</a>
      <a class="px-3 py-2 rounded-lg border hover:bg-slate-50" href="/client/real-estate/">Real-Estate</a>
      <a class="px-3 py-2 rounded-lg border hover:bg-slate-50" href="/client/ideas/">Idea Lab</a>
    </nav>
  </div>
</header>

<main class="mx-auto max-w-7xl px-4 py-8">
  <div class="flex items-center justify-between">
    <h1 class="text-2xl font-extrabold">Market Scanner</h1>
    <a id="dlMd" class="px-4 py-2 rounded-xl bg-brand text-white font-semibold" href="#" onclick="downloadMD()">Stáhnout report (MD)</a>
  </div>
  <p class="mt-2 text-slate-600">Vyhledávej a filtruj akcie, indexy a krypto. Rozklikni řádek pro <em>důvod predikce</em>, <em>podmínky neplatnosti</em> a mini graf s projekcí.</p>

  <!-- Filtry -->
  <div class="mt-4 grid gap-3 sm:grid-cols-3">
    <input id="q" class="border rounded-xl px-3 py-2" placeholder="Hledat symbol / název…">
    <select id="type" class="border rounded-xl px-3 py-2">
      <option value="">Všechny typy</option>
      <option value="stock">Akcie</option>
      <option value="crypto">Krypto</option>
      <option value="index">Index</option>
    </select>
    <select id="sort" class="border rounded-xl px-3 py-2">
      <option value="symbol">Seřadit: Symbol</option>
      <option value="confidence">Seřadit: Důvěra</option>
      <option value="predAvg">Seřadit: 1Y avg</option>
    </select>
  </div>

  <!-- Tabulka -->
  <div id="table" class="mt-5 bg-white border rounded-2xl overflow-hidden"></div>
</main>

<script>
/** Demo dataset – snadno vyměníme za API */
const rows = [
  {
    type:"stock", symbol:"AAPL", name:"Apple Inc.",
    price:219.85, d1:1.26, w1:2.10,
    pred:{min:165, avg:245, max:310, conf:0.72},
    thesis:"Růst služeb a ekosystému, stabilní marže. Re-rating po nové produktové linii.",
    invalid:"Breakdown pod 195 s objemy a slabý guidance.",
    history: [176,182,188,185,191,197,205,202,210,208,214,219]
  },
  {
    type:"crypto", symbol:"BTCUSD", name:"Bitcoin",
    price:67200, d1:2.30, w1:6.80,
    pred:{min:42000, avg:88000, max:120000, conf:0.58},
    thesis:"Poptávka přes ETF, halving, omezená nabídka, sílící narativ digitálního zlata.",
    invalid:"Regulační tlak, silný risk-off, útok na síť.",
    history: [51000,54000,53000,57000,59000,61000,63000,60000,64000,65000,66000,67200]
  },
  {
    type:"index", symbol:"SPY", name:"S&P 500 ETF",
    price:520.10, d1:0.41, w1:1.05,
    pred:{min:470, avg:585, max:650, conf:0.69},
    thesis:"Robustní earnings, AI capex, měkké přistání.",
    invalid:"Překvapivé utažení Fedu / recese.",
    history:[470,475,480,485,488,492,497,500,505,510,515,520]
  }
];

const fmt = n => typeof n==="number" ? (n%1===0 ? n.toString().replace(/\B(?=(\d{3})+(?!\d))/g," ") : n.toFixed(2)) : n;

function render() {
  const q = document.getElementById('q').value.trim().toLowerCase();
  const type = document.getElementById('type').value;
  const sort = document.getElementById('sort').value;

  let data = rows.filter(r =>
    (!type || r.type===type) &&
    (r.symbol.toLowerCase().includes(q) || r.name.toLowerCase().includes(q))
  );

  data.sort((a,b)=>{
    if (sort==="confidence") return b.pred.conf - a.pred.conf;
    if (sort==="predAvg") return b.pred.avg - a.pred.avg;
    return a.symbol.localeCompare(b.symbol);
  });

  const container = document.getElementById('table');
  container.innerHTML = "";
  data.forEach(r=>{
    const row = document.createElement('div');
    row.className = "border-b last:border-b-0";
    row.innerHTML = `
      <div class="grid grid-cols-12 gap-3 items-center px-4 py-3">
        <div class="col-span-2 sm:col-span-1 font-semibold">${r.symbol}</div>
        <div class="col-span-5 sm:col-span-3 text-slate-700">${r.name}</div>
        <div class="col-span-3 sm:col-span-2 tabular-nums">${fmt(r.price)}</div>
        <div class="col-span-1 text-emerald-600 text-sm">+${fmt(r.d1)}%</div>
        <div class="col-span-1 text-emerald-600 text-sm">+${fmt(r.w1)}%</div>
        <div class="col-span-0 sm:col-span-3 hidden sm:block text-sm tabular-nums">
          ${fmt(r.pred.min)} / <span class="font-semibold">${fmt(r.pred.avg)}</span> / ${fmt(r.pred.max)}
        </div>
        <div class="col-span-1 text-sm">${Math.round(r.pred.conf*100)}%</div>
        <div class="col-span-12 sm:col-span-1 flex sm:justify-end">
          <button class="px-3 py-1 rounded-lg border text-sm hover:bg-slate-50">Detail</button>
        </div>

        <!-- detail -->
        <div class="col-span-12 grid sm:grid-cols-2 gap-4 mt-2">
          <div>
            <div class="flex gap-2 flex-wrap">
              <span class="pill">Teze</span>
              <span class="text-slate-700">${r.thesis}</span>
            </div>
            <div class="flex gap-2 flex-wrap mt-2">
              <span class="pill bg-slate-50">Neplatí pokud</span>
              <span class="text-slate-700">${r.invalid}</span>
            </div>
          </div>
          <div class="bg-slate-50 border rounded-xl p-2">
            <canvas height="120"></canvas>
            <div class="mt-1 text-[11px] text-slate-500">*Plná čára = historie, čárkovaně = projekce (min / avg / max)</div>
          </div>
        </div>
      </div>
    `;
    container.appendChild(row);

    // vykreslit sparkline + projekce
    const canvas = row.querySelector('canvas');
    if (canvas) drawSparkline(canvas, r.history, r.pred);
  });
}

function drawSparkline(canvas, history, pred) {
  const ctx = canvas.getContext('2d');
  const w = canvas.width = canvas.clientWidth * devicePixelRatio;
  const h = canvas.height = 120 * devicePixelRatio;
  ctx.scale(devicePixelRatio, devicePixelRatio);

  const padding = {l:8, r:8, t:8, b:8};
  const plotW = canvas.clientWidth - padding.l - padding.r;
  const plotH = 120 - padding.t - padding.b;

  const all = [...history, pred.min, pred.avg, pred.max];
  const minV = Math.min(...all);
  const maxV = Math.max(...all);

  const x = i => padding.l + (i/(history.length+3-1))*plotW; // +3 body projekcí
  const y = v => padding.t + (1-(v-minV)/(maxV-minV))*plotH;

  // historie (plná čára)
  ctx.beginPath();
  ctx.lineWidth = 2;
  ctx.setLineDash([]);
  ctx.strokeStyle = "#0ea5e9";
  history.forEach((v,i)=>{ const X=x(i); const Y=y(v); i?ctx.lineTo(X,Y):ctx.moveTo(X,Y); });
  ctx.stroke();

  // poslední bod historie
  const lastX = x(history.length-1), lastY = y(history[history.length-1]);

  // pomocná funkce pro čárkovanou projekci
  function dashTo(targetValue, color) {
    ctx.beginPath();
    ctx.setLineDash([5,5]);
    ctx.strokeStyle = color;
    ctx.moveTo(lastX,lastY);
    const tX = x(history.length-1+3); // “konec” osy pro projekci
    const tY = y(targetValue);
    ctx.lineTo(tX,tY);
    ctx.stroke();
  }

  // projekce MIN/AVG/MAX (čárkovaně)
  dashTo(pred.min, "#ef4444");   // červená
  dashTo(pred.avg, "#0ea5e9");   // modrá
  dashTo(pred.max, "#10b981");   // zelená

  // tečky a popisky na konci
  function dotAndLabel(val, label, color, yOff=0){
    const tX = x(history.length-1+3), tY = y(val);
    ctx.setLineDash([]);
    ctx.fillStyle = color;
    ctx.beginPath(); ctx.arc(tX,tY,3,0,Math.PI*2); ctx.fill();
    ctx.font = "11px ui-sans-serif,system-ui,-apple-system";
    ctx.fillStyle = "#334155";
    ctx.fillText(`${label}: ${fmt(val)}`, tX-70, tY-6+yOff);
  }
  dotAndLabel(pred.max,"max","#10b981",-10);
  dotAndLabel(pred.avg,"avg","#0ea5e9",6);
  dotAndLabel(pred.min,"min","#ef4444",22);
}

function downloadMD(){
  const lines = rows.map(r=>`### ${r.symbol} — ${r.name}
- Cena: ${fmt(r.price)}
- 1D: +${fmt(r.d1)} %, 1W: +${fmt(r.w1)} %
- 1Y predikce: min ${fmt(r.pred.min)} / **avg ${fmt(r.pred.avg)}** / max ${fmt(r.pred.max)} (důvěra ${Math.round(r.pred.conf*100)} %)
- Teze: ${r.thesis}
- Neplatí pokud: ${r.invalid}
`);
  const blob = new Blob(["# Market report (demo)\n\n", ...lines], {type:"text/markdown"});
  const url = URL.createObjectURL(blob);
  const a = document.createElement("a"); a.href=url; a.download="market_report_demo.md"; a.click();
  URL.revokeObjectURL(url);
}

['q','type','sort'].forEach(id=>document.getElementById(id).addEventListener('input',render));
render();
</script>
</body>
</html>
