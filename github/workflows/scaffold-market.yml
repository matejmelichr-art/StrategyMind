name: Scaffold market structure

on:
  workflow_dispatch:
    inputs:
      base_path:
        description: "Kde vytvořit strukturu"
        required: true
        default: "client/market"

jobs:
  scaffold:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create folders & placeholders (idempotent)
        shell: bash
        env:
          BASE: ${{ github.event.inputs.base_path }}
        run: |
          set -euo pipefail
          echo "Target base path: $BASE"

          # seznam složek pro Market Scanner
          DIRS=(
            "$BASE"
            "$BASE/scripts"
            "$BASE/styles"
            "$BASE/components"
            "$BASE/data"
            "$BASE/images"
            "$BASE/tests"
            "$BASE/docs"
          )

          # vytvoř vše (nevadí, když existuje)
          for d in "${DIRS[@]}"; do
            mkdir -p "$d"
            # pro prázdné složky necháme .gitkeep, ať je git sleduje
            if [ ! -e "$d/.gitkeep" ]; then
              touch "$d/.gitkeep"
            fi
          done

          # NEPŘEPISOVAT existující index.html
          if [ ! -f "$BASE/index.html" ]; then
            cat > "$BASE/index.html" <<'HTML'
<!doctype html>
<html lang="cs">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>StrategyMind — Market Scanner</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <script src="https://cdn.tailwindcss.com?plugins=forms"></script>

  <!-- modulární assety -->
  <link rel="stylesheet" href="./styles/market.css">
</head>
<body class="bg-slate-50 text-slate-900">
  <div id="app" class="max-w-6xl mx-auto px-4 py-8">
    <h1 class="text-3xl font-semibold tracking-tight">Market Scanner</h1>
    <div id="table"></div>
  </div>

  <!-- hlavní JS entrypoint -->
  <script type="module" src="./scripts/market.js"></script>
</body>
</html>
HTML
          fi

          # vytvoř prázdné CSS, pokud chybí
          if [ ! -f "$BASE/styles/market.css" ]; then
            cat > "$BASE/styles/market.css" <<'CSS'
/* Place for Market Scanner specific styles */
CSS
          fi

          # vytvoř základ JS entrypoint + foldery, pokud chybí
          if [ ! -f "$BASE/scripts/market.js" ]; then
            cat > "$BASE/scripts/market.js" <<'JS'
// Entry point for Market Scanner (modularized)
// Idea: split to ./components/* and ./data/*

import { renderTable } from './modules/render-table.js';
import { data } from '../data/demo.js';

renderTable(document.getElementById('table'), data);
JS
          fi

          # modul pro render tabulky
          mkdir -p "$BASE/scripts/modules"
          if [ ! -f "$BASE/scripts/modules/render-table.js" ]; then
            cat > "$BASE/scripts/modules/render-table.js" <<'JS'
export function renderTable(root, rows) {
  if (!root) return;
  const table = document.createElement('div');
  table.className = 'mt-3 rounded-2xl border border-slate-200 bg-white shadow-sm';
  table.innerHTML = `
    <div class="px-4 py-2 text-sm font-medium text-slate-500 bg-slate-50 grid"
         style="grid-template-columns: 90px 1fr 120px 100px 100px 250px 80px 150px; align-items:center;">
      <div></div><div>Název</div><div class="text-right">Cena</div><div class="text-right">1D %</div>
      <div class="text-right">1W %</div><div class="text-center">1Y predikce <span class="text-slate-400">(min / avg / max)</span></div>
      <div class="text-right">Conf.</div><div class="text-right">Akce</div>
    </div>
    <div id="rows"></div>
  `;
  root.replaceChildren(table);

  const rowsEl = table.querySelector('#rows');
  rowsEl.innerHTML = rows.map(r => `
    <div class="border-t border-slate-100 px-4 py-3 grid"
         style="grid-template-columns: 90px 1fr 120px 100px 100px 250px 80px 150px; align-items:center;">
      <div class="font-semibold">${r.symbol}</div>
      <div class="text-slate-700 truncate">${r.name}</div>
      <div class="text-right tabular-nums">${new Intl.NumberFormat('cs-CZ',{maximumFractionDigits:2}).format(r.price)}</div>
      <div class="text-right ${r.d1>=0?'text-emerald-600':'text-rose-600'}">${pct(r.d1)}</div>
      <div class="text-right ${r.w1>=0?'text-emerald-600':'text-rose-600'}">${pct(r.w1)}</div>
      <div class="text-center tabular-nums">${r.forecast.min} / <b>${r.forecast.avg}</b> / ${r.forecast.max}</div>
      <div class="text-right">${r.forecast.conf}%</div>
      <div class="text-right"><button class="px-3 py-1 rounded-lg bg-cyan-600 text-white">AI predikce</button></div>
    </div>
  `).join('');

  function pct(v){ return (v>=0?'+':'') + v.toFixed(2) + '%'; }
}
JS
          fi

          # demo data (můžeš později nahradit API fetchem)
          if [ ! -f "$BASE/data/demo.js" ]; then
            cat > "$BASE/data/demo.js" <<'JS'
export const data = [
  {type:'stock',symbol:'AAPL',name:'Apple Inc.',price:219.85,d1:1.26,w1:2.10,forecast:{min:165,avg:245,max:310,conf:72}},
  {type:'crypto',symbol:'BTCUSD',name:'Bitcoin',price:67200,d1:2.30,w1:6.80,forecast:{min:42000,avg:88000,max:120000,conf:58}},
  {type:'stock',symbol:'NVDA',name:'NVIDIA Corporation',price:241.80,d1:1.85,w1:4.10,forecast:{min:128,avg:281,max:498,conf:72}}
];
JS
          fi

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Scaffold market structure (idempotent)"
          commit_user_name: github-actions[bot]
          commit_user_email: 41898282+github-actions[bot]@users.noreply.github.com
          push_options: --force-with-lease
